# Generated by Django 4.1.2 on 2024-12-04 11:14

from django.db import migrations

from django.contrib.auth.models import User
from django.contrib.auth.models import Group

from datetime import datetime, timedelta
import time

def beginning(apps, schema_editor):
    
    # Суперпользователь id-1
    user = User.objects.create_superuser(username='root',
    email='samga0412@mail.ru',
    password='SsNn5678+-@', 
    last_login=datetime.now())
    print("Суперпользователь создан")
    
    # Группа менеджеров
    managers = Group.objects.get_or_create(name = 'Managers')
    managers = Group.objects.get(name='Managers')
    print("Группа менеджеров создана")
    
    # Пользователь с ролью менеджера id2
    user = User.objects.create_user(username='manager', password='Ss0066+-', email='manager@mail.ru', first_name='Менеджер', last_name='', last_login=datetime.now())
    managers.user_set.add(user)
    print("Менеджер добавлен в группу менеджеров")

    # Простые пользователи (заявители) id3-27
    user = User.objects.create_user(username='user1', password='Uu0066+-', email='user1@mail.ru', first_name='Дина', last_name='Мусина', last_login=datetime.now())
    user = User.objects.create_user(username='user2', password='Uu0066+-', email='user2@mail.ru', first_name='Адия', last_name='Жунусова', last_login=datetime.now())
    user = User.objects.create_user(username='user3', password='Uu0066+-', email='user3@mail.ru', first_name='Айнура', last_name='Кенина', last_login=datetime.now())
    user = User.objects.create_user(username='user4', password='Uu0066+-', email='user4@mail.ru', first_name='Рустем', last_name='Какимов', last_login=datetime.now())
    user = User.objects.create_user(username='user5', password='Uu0066+-', email='user5@mail.ru', first_name='Алишер', last_name='Кабдуалиев', last_login=datetime.now())
    user = User.objects.create_user(username='user6', password='Uu0066+-', email='user6@mail.ru', first_name='Бауржан', last_name='Арыкбаев', last_login=datetime.now())
    user = User.objects.create_user(username='user7', password='Uu0066+-', email='user7@mail.ru', first_name='Алишер', last_name='Танатаров', last_login=datetime.now())
    user = User.objects.create_user(username='user8', password='Uu0066+-', email='user8@mail.ru', first_name='Мерует', last_name='Искакова', last_login=datetime.now())
    user = User.objects.create_user(username='user9', password='Uu0066+-', email='user9@mail.ru', first_name='Ольга', last_name='Муравьева', last_login=datetime.now())
    user = User.objects.create_user(username='user10', password='Uu0066+-', email='user10@mail.ru', first_name='Ақжарқын', last_name='Сансызбаева', last_login=datetime.now())
    user = User.objects.create_user(username='user11', password='Uu0066+-', email='user11@mail.ru', first_name='Арайлым', last_name='Алматова', last_login=datetime.now())
    user = User.objects.create_user(username='user12', password='Uu0066+-', email='user12@mail.ru', first_name='Айгерім', last_name='Дүйсенбиева', last_login=datetime.now())
    user = User.objects.create_user(username='user13', password='Uu0066+-', email='user13@mail.ru', first_name='Салтанат', last_name='Зиноллаева', last_login=datetime.now())
    user = User.objects.create_user(username='user14', password='Uu0066+-', email='user14@mail.ru', first_name='Сейтқасым', last_name='Болат', last_login=datetime.now())
    user = User.objects.create_user(username='user15', password='Uu0066+-', email='user15@mail.ru', first_name='Сара', last_name='Фазилова', last_login=datetime.now())
    user = User.objects.create_user(username='user16', password='Uu0066+-', email='user16@mail.ru', first_name='Бектас', last_name='Ерсейіт', last_login=datetime.now())
    user = User.objects.create_user(username='user17', password='Uu0066+-', email='user17@mail.ru', first_name='Диас', last_name='Мырзаш', last_login=datetime.now())
    user = User.objects.create_user(username='user18', password='Uu0066+-', email='user18@mail.ru', first_name='Нұржан', last_name='Жүрсінбек', last_login=datetime.now())
    user = User.objects.create_user(username='user19', password='Uu0066+-', email='user19@mail.ru', first_name='Дина', last_name='Жағыпар', last_login=datetime.now())
    user = User.objects.create_user(username='user20', password='Uu0066+-', email='user20@mail.ru', first_name='Жастілек', last_name='Жасталап', last_login=datetime.now())
    user = User.objects.create_user(username='user21', password='Uu0066+-', email='user21@mail.ru', first_name='Еркебұлан', last_name='Қадыхан', last_login=datetime.now())
    user = User.objects.create_user(username='user22', password='Uu0066+-', email='user22@mail.ru', first_name='Молдир', last_name='Бутабекова', last_login=datetime.now())
    user = User.objects.create_user(username='user23', password='Uu0066+-', email='user23@mail.ru', first_name='Аружан', last_name='Таурбекова', last_login=datetime.now())
    user = User.objects.create_user(username='user24', password='Uu0066+-', email='user24@mail.ru', first_name='Алтынай', last_name='Қожанова', last_login=datetime.now())
    user = User.objects.create_user(username='user25', password='Uu0066+-', email='user25@mail.ru', first_name='Эльнара', last_name='Иминова', last_login=datetime.now())
    print("Созданы простые пользователи")
        
    ##### Новости #####
    News = apps.get_model("academy", "News")
    
    #news = News()
    #news.daten = '2024-07-23 12:00:00'
    #news.title = 'Озвучена дата начала регистрации на августовское ЕНТ'
    #news.details = """Регистрация на августовское платное ЕНТ пройдет с 25 по 30 июля.
    #Регистрация на августовское ЕНТ будет проходить на сайте app.testcenter.kz с 25 по 30 июля. Само тестирование пройдет с 10 по 13 августа."""
    #news.photo = 'images/news1.jpeg' 
    #news.save()
    
    #news = News()
    #news.daten = '2024-07-31 13:00:00'
    #news.title = 'Казахстанские школьники завоевали на международных олимпиадах 23 медали'
    #news.details =  """3 золотые, 13 серебряных и 7 бронзовых медалей завоевали казахстанские школьники на самых престижных международных предметных олимпиадах.
    #Таким образом, по промежуточным итогам в копилке сборной 23 медали по 6 предметам, передает пресс-служба Министерства просвещения РК.
    #На международной олимпиаде по математике (IMO) сборная Казахстана завоевала 3 серебра и 3 бронзы.
    #При этом команда набрала 174 балла, установив новый рекорд за всю историю участия страны в данной олимпиаде, и показала лучший результат за последние 12 лет. """
    #news.photo = 'images/news2.jpeg' 
    #news.save()
    
    #news = News()
    #news.daten = '2024-05-03 13:00:00'
    #news.title = 'Льготные кредиты на обучение в вузах появятся в Казахстане'
    #news.details = """Президент Казахстана Касым-Жомарт Токаев предложил новые меры для выделения грантов студентам
    #Глава государства заявил, что по мере повышения качества отечественных вузов будет возрастать и стоимость обучения в них.
    #"Поэтому государство планирует выделять образовательные гранты, которые в зависимости от результатов ЕНТ и иных показателей будут дифференцированы по размеру - от 30 до 100 процентов. Будут предоставляться и льготные кредиты на обучение под 2-3 процента годовых. Указанные меры сделают высшее образование более доступным, а также укрепят в обществе идеологию партнерства и взаимной ответственности", - сказал Президент."""
    #news.photo = 'images/news3.jpeg' 
    #news.save()
    
    #news = News()
    #news.daten = '2024-05-03 14:00:00'
    #news.title = 'О новой системе грантов и кредитах на обучение рассказал министр'
    #news.details = """Министр науки и высшего образования Саясат Нурбек рассказал, как будет работать новая система распределения образовательных грантов в Казахстане.
    #Саясат Нурбек заявил, что в министерстве прорабатываются подходы по введению дифференцированного гранта. По его словам, данное поручение Президента чрезвычайно актуально в контексте демографических трендов и роста стоимости обучения.
    #"Студентам будет предоставлена возможность получения образовательного кредита под 2-3 процента годовых. В качестве инструмента накопления средств на получение образования прорабатываем использование ГОНС совместно с Министерством просвещения в зависимости от возраста детей и студентов", - отметил Саясат Нурбек."""
    #news.photo = 'images/news4.jpeg' 
    #news.save()
    
    #news = News()
    #news.daten = '2024-05-19 15:00:00'
    #news.title = 'Отличившимся - гранты: отслужившие казахстанцы смогут поступать в вузы без ЕНТ'
    #news.details = """Казахстанцы, отслужившие срочную воинскую службу, смогут поступить в вуз без учета баллов ЕНТ, а отличившимся срочникам предоставят гранты. Об этом сообщили в пресс-службе Министерства обороны.
    #Совместный проект Минобороны и Министерства науки и высшего образования предусматривает предоставление всем гражданам, отслужившим срочную воинскую службу, возможности поступления на обучение в вузы на платной основе в течение двух лет после прохождения срочной воинской службы по результатам собеседования, без учета результатов ЕНТ. """
    #news.photo = 'images/news5.jpeg' 
    #news.save()
    
    #news = News()
    #news.daten = '2024-05-21 16:00:00'
    #news.title = 'Появились бесплатные видеоуроки для казахстанских школьников'
    #news.details = """Казахстанские школьники получили бесплатный доступ к онлайн-урокам.
    #Ученики 1-11 классов могут в свободном доступе получать уроки онлайн-репетиторов на сайте Mektep-online.kz и на одноименном YouТube-канале по основным предметам школьной программы на двух языках.
    #"Mektep-online - это сайт, на котором собраны и структурированы около четырех тысяч видеоуроков по программе младшей, средней и старшей школы, на YouTube-каналах Mektep-online представлены уроки по математике, химии, биологии, физике, геометрии. А с сентября 2024 года появился игровой образовательный контент для 1-4 классов ARMAN kids", - рассказала представитель частного фонда, разработавшего платформу, Балия Акимбекова. """
    #news.photo = 'images/news6.jpeg' 
    #news.save()
    
    #news = News()
    #news.daten = '2024-05-23 17:00:00'
    #news.title = '"Как IELTS и TOEFL". Формат ЕНТ планируют изменить в Казахстане'
    #news.details = """Формат Единого национального тестирования (ЕНТ) планируют изменить в Казахстане, приблизив к форматам IELTS и ТOEFL. Об этом сообщил министр науки и высшего образования Саясат Нурбек.
    #Саясат Нурбек прокомментировал аннулирование результатов ЕНТ 153 выпускников школ после просмотра камер видеонаблюдения. Министр отметил, что эта практика не совсем справедливая.
    #"Внедрены системы прокторинга - камеры, видеонаблюдение из двух углов, чтобы фиксировать в автоматическом режиме любые неправомерные действия сдающего тест абитуриента. И после этого идет анализ видеоматериала и фиксируется, было или нет нарушение. И по итогам этого анализа принимается решение об аннулировании. Согласен, не совсем справедливо забирать грант после того, как прошло определенное время. Поэтому мы сейчас проводим очень серьезную работу по двум направлениям", - сказал министр на брифинге СЦК.
    #Во-первых, по его словам, в стране пересмотрят формат ЕНТ и его содержательную часть. Тест будет не просто давать правильные и неправильные варианты ответов, а проверять функциональную грамотность, уровень подготовки и пробелы в знаниях. """
    #news.photo = 'images/news7.jpeg' 
    #news.save()
    
    news = News()
    news.daten = datetime.now() - timedelta(days=60)
    news.title = 'Тамыз айына тіркеудің басталу күні айтылды ЕНТ'
    news.details = """Тамыздағы ақылы ҰБТ-ға тіркелу 25-30 шілде аралығында өтеді.
    Тамыз айына тіркелу сайтта өтеді app.testcenter.kz 25-30 шілде аралығында. Тестілеудің өзі 10-13 тамыз аралығында өтеді."""
    news.photo = 'images/news1.jpeg' 
    news.save()
    
    news = News()
    news.daten = datetime.now() - timedelta(days=50)
    news.title = 'Қазақстандық оқушылар халықаралық олимпиадаларда 23 медаль жеңіп алды'
    news.details =  """Қазақстандық оқушылар ең беделді халықаралық пәндік олимпиадаларда 3 алтын, 13 күміс және 7 қола медаль жеңіп алды.
    Осылайша, аралық қорытындылар бойынша құрама қоржынында 6 пән бойынша 23 медаль бар, деп хабарлайды ҚР Білім министрлігінің баспасөз қызметі.
    Математикадан халықаралық олимпиадада (IMO) Қазақстан құрамасы 3 күміс және 3 қола жеңіп алды.
    Бұл ретте команда 174 ұпай жинап, еліміздің осы олимпиадаға қатысуының бүкіл тарихында жаңа рекорд орнатты және соңғы 12 жылда үздік нәтиже көрсетті."""
    news.photo = 'images/news2.jpeg' 
    news.save()
    
    news = News()
    news.daten = datetime.now() - timedelta(days=45)
    news.title = 'Қазақстанда жоғары оқу орындарында оқуға жеңілдікті кредиттер пайда болады'
    news.details = """Қазақстан президенті Қасым-Жомарт Тоқаев студенттерге грант бөлудің жаңа шараларын ұсынды
    Мемлекет басшысы отандық жоғары оқу орындарының сапасы артқан сайын оларда оқу құны да артатынын айтты.
    "Сондықтан мемлекет ҰБТ нәтижелеріне және өзге де көрсеткіштерге байланысты мөлшері бойынша - 30-дан 100 пайызға дейін сараланатын білім беру гранттарын бөлуді жоспарлап отыр. Жылдық 2-3 пайызбен жеңілдетілген оқу несиелері де беріледі. Аталған шаралар жоғары білім беруді анағұрлым қолжетімді етеді, сондай - ақ қоғамда әріптестік пен өзара жауапкершілік идеологиясын нығайтады", - деді Президент."""
    news.photo = 'images/news3.jpeg' 
    news.save()
    
    news = News()
    news.daten = datetime.now() - timedelta(days=40)
    news.title = 'Жаңа гранттар жүйесі мен оқу несиелері туралы министр айтты'
    news.details = """Ғылым және жоғары білім министрі Саясат Нұрбек Қазақстанда білім беру гранттарын бөлудің жаңа жүйесі қалай жұмыс істейтінін айтты.
    Саясат Нұрбек министрлікте сараланған грантты енгізу тәсілдері пысықталып жатқанын айтты. Оның айтуынша, Президенттің бұл тапсырмасы демографиялық үрдістер мен оқу құнының өсуі тұрғысынан өте өзекті.
    "Студенттерге жылдық 2-3 пайызбен білім беру несиесін алу мүмкіндігі беріледі. Білім алуға қаражат жинау құралы ретінде балалар мен студенттердің жасына байланысты білім министрлігімен бірлесіп ГНС пайдалануды пысықтаймыз", - деп атап өтті Саясат Нұрбек."""
    news.photo = 'images/news4.jpeg' 
    news.save()
    
    news = News()
    news.daten = datetime.now() - timedelta(days=35)
    news.title = 'Ерекшеленгендерге-гранттар: қызмет еткен қазақстандықтар ЖОО-ға онсыз түсе алады ЕНТ'
    news.details = """Мерзімді әскери қызмет өткерген қазақстандықтар ҰБТ балдарын есепке алмай ЖОО-ға түсе алады, ал ерекшеленген мерзімділерге гранттар беріледі. Бұл туралы Қорғаныс министрлігінің баспасөз қызметі хабарлады.
    Қорғаныс министрлігі мен ғылым және жоғары білім министрлігінің бірлескен жобасы мерзімді әскери қызметті өткерген барлық азаматтарға ҰБТ нәтижелерін есепке алмай, әңгімелесу нәтижелері бойынша мерзімді әскери қызметті өткергеннен кейін екі жыл ішінде ақылы негізде ЖОО-ға оқуға түсу мүмкіндігін беруді көздейді."""
    news.photo = 'images/news5.jpeg' 
    news.save()
    
    news = News()
    news.daten = datetime.now() - timedelta(days=30)
    news.title = 'Қазақстандық оқушыларға арналған тегін бейне сабақтар пайда болды'
    news.details = """Қазақстандық оқушылар онлайн сабақтарға тегін қол жеткізді.
    1-11 сынып оқушылары сайтта онлайн-репетиторлық сабақтарды еркін ала алады Mektep-online.kz және аттас YouTube арнасында мектеп бағдарламасының негізгі пәндері бойынша екі тілде.
    "Mektep -lline-бұл кіші, орта және орта мектеп бағдарламалары бойынша төрт мыңға жуық бейне сабақтар жиналған және құрылымдалған сайт, mektep-online YouTube арналарында математика, химия, биология, физика, геометрия сабақтары ұсынылған. Ал 2024 жылдың қыркүйегінен бастап ARMANkids 1-4 сыныптары үшін ойынға негізделген білім беру мазмұны пайда болды", - деді платформаны әзірлеген жеке қордың өкілі Балия Әкімбекова."""
    news.photo = 'images/news6.jpeg' 
    news.save()
    
    news = News()
    news.daten = datetime.now() - timedelta(days=25)
    news.title = '"IELTS және TOEFL сияқты". Қазақстанда ҰБТ форматын өзгерту жоспарлануда'
    news.details = """Ұлттық бірыңғай тестілеу (ҰБТ) форматын Қазақстанда IELTS және TOEFL форматтарына жақындата отырып өзгерту жоспарлануда. Бұл туралы ғылым және жоғары білім министрі Саясат Нұрбек хабарлады.
    Саясат Нұрбек бейнебақылау камераларын көргеннен кейін 153 мектеп түлегінің ҰБТ нәтижелерінің күшін жою туралы пікір білдірді. Министр бұл тәжірибе әділ емес екенін атап өтті.
    "Тест тапсырушы талапкердің кез келген заңсыз әрекеттерін автоматты режимде тіркеу үшін прокторинг жүйесі - камера, екі бұрыштан бейнебақылау енгізілді. Осыдан кейін бейне материалға талдау жасалады және бұзушылық болған-болмағаны жазылады. Осы талдаудың қорытындысы бойынша күшін жою туралы шешім қабылданады. Келісемін, белгілі бір уақыт өткеннен кейін грантты алу әділетті емес. Сондықтан біз қазір екі бағыт бойынша өте маңызды жұмыс жүргізіп жатырмыз", - деді министр ОКҚ брифингінде.
    Біріншіден, оның айтуынша, елімізде ҰБТ форматы мен оның мазмұндық бөлігі қайта қаралады. Тест тек дұрыс және бұрыс жауап нұсқаларын беріп қана қоймай, функционалдық сауаттылықты, дайындық деңгейін және білімдегі олқылықтарды тексереді. """
    news.photo = 'images/news7.jpeg' 
    news.save()
        
    #news = News()
    #news.daten = datetime.now() - timedelta(days=20)
    #news.title = 'Қаңтар айындағы ҰБТ-ның қорытындылары'
    #news.details = """Қаңтар ҰБТ-сын 123 мыңға жуық адам тапсырды. Оның ішінде түлектердің 77% – ы қазақ тілінде, 23% - ы орыс тілінде, 91 адам ағылшын тілінде тестілеуден өтті.
    #ҰБТ басталғалы шекті балды 83%-ға жуық талапкер жинап, 21 мыңнан астамы (17%-ы) шекті балл жинай алмады. 
    #ҰБТ орташа балы 76 балды құрады. Ең жоғары балл – 139.
    #«Қаңтар ҰБТ-сы 10 қаңтар-10 ақпан аралығында өтті. Жалпы, қаңтардағы ұлттық бірыңғай тестілеуге 123 мыңға жуық адам қатысты. Тестіленушілердің ең көп таңдаған комбинациясы - «Математика-Физика» (19%). Тапсырушылардың 18%-ы «Биология-Химия» комбинациясын таңдаса, 10%-ы шығармашылық емтиханды таңдаған. IT бағыттарға түсуге қажетті жаңа «Математика-Информатика» комбинациясын ҰБТ-ға қатысушылардың 10%-ы тапсырған», – деп атап өтті ҚР ҒЖБМ Ұлттық тестілеу орталығының директоры Руслан Емелбаев.
    #Талапкерлердің, соның ішінде ерекше білім беру қажеттіліктері бар талапкерлердің тестілеуді ыңғайлы тапсыруы үшін ҰБТ тапсыру уақыты 40 минутқа ұзартылған. Сонымен қатар, олар үшін сызба және диаграммаларсыз сұрақтар жасалды. Қабылданған шаралар арқасында ерекше білім беру қажеттіліктері бар 274 бала ҰБТ тапсырды. 
    #62 талапкер смартфон, шпаргалка және басқа да тыйым салынған заттарды алып өту әрекеті салдарынан тест тапсыру мүмкіндігінен айырылды. Тестілеу кезінде ережелерді бұзғаны үшін аудиториядан 98 адам шығарылып, олардың нәтижелері жойылды. Өзге тұлғалар анықталған жоқ.
    #Естеріңізге сала кетсек, ҰБТ-ға дайындықты жақсарту мақсатында Ұлттық тестілеу орталығы оқу жылының басында тестілеу пәнінің спецификацияларын, тест жоспарын, Қазақстан тарихы және Дүниежүзі тарихынан 100 дата, Информатикадан терминдер тізімін, Қазақ әдебиеті және орыс әдебиеті пәндерінен шығармалар тізімін өз сайтында және әлеуметтік желілерінде жариялады."""
    #news.photo = 'images/news8.jpeg' 
    #news.save()
    
    #news = News()
    #news.daten = datetime.now() - timedelta(days=15)
    #news.title = 'Қаңтар айындағы ҰБТ-ның аралық қорытындылары'
    #news.details = """Қаңтар айындағы ҰБТ басталғалы бері 57 мың адам тест тапсырды.
    #Оның ішінде: талапкерлердің 78% – ға жуығы шекті балл жинады; орташа балл – 70 балл; ерекше білім беру қажеттілігі бар 93 бала қатысты. Ереже бұзғаны үшін 93 адамның нәтижелері жойылды. Атап өтсек:
    #смартфон, шпаргалка және басқа да тыйым салынған заттарды алып өту әрекеті салдарынан 36 талапкер тест тапсыру мүмкіндігінен айырылды; тестілеу кезінде ережелерді бұзғаны үшін аудиториядан 57 адам шығарылды; бөгде тұлғалар анықталған жоқ. Қатысушылардың басым бөлігі, яғни 19%-ы «Математика-физика» және 18%-ы «Биология-Химия» пәндер комбинациясын таңдаған. Сондай-ақ IT бағыттарына түсуге қажетті жаңа «Математика-Информатика» комбинациясын ҰБТ-ға қатысушылардың 9%-ы тапсырған.
    #Естеріңізге сала кетейік, қаңтар айындағы ҰБТ 10 ақпанға дейін өтеді. Қорытынды мәліметтер сол уақытта жарияланады. """
    #news.photo = 'images/news9.jpeg' 
    #news.save()
    
    #news = News()
    #news.daten = datetime.now() - timedelta(days=10)
    #news.title = 'Әр ҰБТ сайын бейіндік пәндерімді өзгертіп отыруға бола ма?'
    #news.details = """Бұл сұраққа біз бірнеше рет Сіздерге жауап бергенбіз, алайда, қайталап кетудің артықтығы жоқ деп санаймыз. Сонымен, ҚАҢТАР, НАУРЫЗ ЖӘНЕ ТАМЫЗ айларындағы ҰБТ-да ӘРТҮРЛІ БЕЙІНДІК ПӘНДЕР КОМБИНАЦИЯСЫН таңдауға болады. Ал негізгі ҰБТ-ны тапсыруға берілген екі мүмкіндікте де БІР БЕЙІНДІК ПӘНДЕР КОМБИНАЦИЯСЫН таңдай аласыздар. """
    #news.photo = 'images/news10.jpeg' 
    #news.save()
    
    print("Новости добавлены")

    ##### Преподаватели #####
    Teachers = apps.get_model("academy", "Teachers")
    
    teachers = Teachers()
    teachers.surname = 'Шохан' 
    teachers.name = 'Камила' 
    teachers.patronymic = '' 
    #teachers.details = 'История Казахстана' 
    teachers.details = 'Қазақстан тарихы' 
    teachers.photo = 'images/woman1.jpg' 
    teachers.save()
    
    teachers = Teachers()
    teachers.surname = 'Өкеш' 
    teachers.name = 'Айдана' 
    teachers.patronymic = '' 
    #teachers.details = 'Математическая грамотность' 
    teachers.details = 'Математикалық сауаттылық'
    teachers.photo = 'images/woman2.jpg' 
    teachers.save()
    
    teachers = Teachers()
    teachers.surname = 'Жунусов' 
    teachers.name = 'Ерхан' 
    teachers.patronymic = '' 
    #teachers.details = 'Биология'
    teachers.details = 'Биология'
    teachers.photo = 'images/male1.jpg' 
    teachers.save()
    
    teachers = Teachers()
    teachers.surname = 'Абдуллаев' 
    teachers.name = 'Хамитжан' 
    teachers.patronymic = ''
    teachers.details = 'Математика'
    teachers.photo = 'images/male2.jpg' 
    teachers.save()

    teachers = Teachers()
    teachers.surname = 'Атығаева' 
    teachers.name = 'Аида' 
    teachers.patronymic = '' 
    teachers.details = 'Химия'
    teachers.photo = 'images/woman3.jpg' 
    teachers.save()
    
    
    teachers = Teachers()
    teachers.surname = 'Смагулов' 
    teachers.name = 'Баян' 
    teachers.patronymic = '' 
    #teachers.details = 'История мира'
    teachers.details = 'Дүние Жүзі тарихы'
    teachers.photo = 'images/male3.jpg' 
    teachers.save()
    
    print("Преподаватели добавлены")
    
    ##### Курсы #####
    Training = apps.get_model("academy", "Training")
    
    #training = Training()
    #training.title = 'Математическая грамотность' 
    #training.details = 'Математическая грамотность' 
    #training.save()
    
    training = Training()
    training.title = 'Математикалық сауаттылық' 
    training.details = 'Математикалық сауаттылық' 
    training.save()

    training = Training()
    training.title = 'Информатика' 
    training.details = 'Информатика' 
    training.save()
    
    #training = Training()
    #training.title = 'История Казахстана' 
    #training.details = 'История Казахстана' 
    #training.save()
    
    training = Training()
    training.title = 'Қазақстан тарихы' 
    training.details = 'Қазақстан тарихы' 
    training.save()
    
    training = Training()
    training.title = 'Математика' 
    training.details = 'Математика' 
    training.save()
    
    training = Training()
    training.title = 'Физика' 
    training.details = 'Физика' 
    training.save()
    
    training = Training()
    training.title = 'Химия' 
    training.details = 'Химия' 
    training.save()
    
    training = Training()
    training.title = 'Биология' 
    training.details = 'Биология' 
    training.save()
    
    training = Training()
    training.title = 'География' 
    training.details = 'География' 
    training.save()
    
    #training = Training()
    #training.title = 'Всемирная история' 
    #training.details = 'Всемирная история' 
    #training.save()

    training = Training()
    training.title = 'Дүниежүзілік тарих' 
    training.details = 'Дүниежүзілік тарих' 
    training.save()
    
    #training = Training()
    #training.title = 'Основы права' 
    #training.details = 'Основы права' 
    #training.save()

    training = Training()
    training.title = 'Құқық негіздері' 
    training.details = 'Құқық негіздері' 
    training.save()
    
    print("Курсы добавлены")

    ##### Группы #####
    Groups = apps.get_model("academy", "Groups")
    
    #groups = Groups()
    #groups.training_id = 1
    #groups.title = 'МГ22-1' 
    #groups.details = 'Математическая грамотность' 
    #groups.teachers_id = 1
    #groups.save()
    
    #groups = Groups()
    #groups.training_id = 1
    #groups.title = 'МГ22-2' 
    #groups.details = 'Математическая грамотность' 
    #groups.teachers_id = 2
    #groups.save() 
    
    groups = Groups()
    groups.training_id = 1
    groups.title = 'МГ22-1' 
    groups.details = 'Математикалық сауаттылық' 
    groups.teachers_id = 1
    groups.save()
    
    groups = Groups()
    groups.training_id = 1
    groups.title = 'МГ22-2' 
    groups.details = 'Математикалық сауаттылық' 
    groups.teachers_id = 2
    groups.save()
    
    groups = Groups()
    groups.training_id = 2
    groups.title = 'ИН22-1' 
    groups.details = 'Информатика' 
    groups.teachers_id = 3
    groups.save()
    
    groups = Groups()
    groups.training_id = 2
    groups.title = 'ИН22-2' 
    groups.details = 'Информатика' 
    groups.teachers_id = 4
    groups.save()
    
    #groups = Groups()
    #groups.training_id = 3
    #groups.title = 'ИК22-1' 
    #groups.details = 'История Казахстана' 
    #groups.teachers_id = 5
    #groups.save()
    
    #groups = Groups()
    #groups.training_id = 3
    #groups.title = 'ИК22-2' 
    #groups.details = 'История Казахстана' 
    #groups.teachers_id = 6
    #groups.save()

    groups = Groups()
    groups.training_id = 3
    groups.title = 'ИК22-1' 
    groups.details = 'Қазақстан тарихы' 
    groups.teachers_id = 5
    groups.save()
    
    groups = Groups()
    groups.training_id = 3
    groups.title = 'ИК22-2' 
    groups.details = 'Қазақстан тарихы' 
    groups.teachers_id = 6
    groups.save()

    print("Группы добавлены")

    ##### Состав группы #####
    Members = apps.get_model("academy", "Members")
    
    members = Members()
    members.groups_id = 1
    members.user_id = 3
    members.save()
    
    members = Members()
    members.groups_id = 1
    members.user_id = 4
    members.save()
    
    members = Members()
    members.groups_id = 1
    members.user_id = 5
    members.save()
    
    members = Members()
    members.groups_id = 1
    members.user_id = 6
    members.save()
    
    members = Members()
    members.groups_id = 2
    members.user_id = 7
    members.save()
    
    members = Members()
    members.groups_id = 2
    members.user_id = 8
    members.save()
    
    members = Members()
    members.groups_id = 2
    members.user_id = 9
    members.save()
    
    members = Members()
    members.groups_id = 3
    members.user_id = 10
    members.save()
    
    members = Members()
    members.groups_id = 3
    members.user_id = 11
    members.save()
    
    members = Members()
    members.groups_id = 3
    members.user_id = 12
    members.save()
    
    members = Members()
    members.groups_id = 3
    members.user_id = 13
    members.save()
    
    members = Members()
    members.groups_id = 3
    members.user_id = 14
    members.save()
    
    members = Members()
    members.groups_id = 4
    members.user_id = 15
    members.save()
    
    members = Members()
    members.groups_id = 4
    members.user_id = 16
    members.save()
    
    members = Members()
    members.groups_id = 4
    members.user_id = 17
    members.save()
    
    members = Members()
    members.groups_id = 4
    members.user_id = 18
    members.save()
    
    members = Members()
    members.groups_id = 5
    members.user_id = 19
    members.save()
    
    members = Members()
    members.groups_id = 5
    members.user_id = 20
    members.save()
    
    members = Members()
    members.groups_id = 5
    members.user_id = 21
    members.save()
    
    members = Members()
    members.groups_id = 5
    members.user_id = 22
    members.save()
    
    members = Members()
    members.groups_id = 6
    members.user_id = 23
    members.save()
    
    members = Members()
    members.groups_id = 6
    members.user_id = 24
    members.save()
    
    members = Members()
    members.groups_id = 6
    members.user_id = 25
    members.save()
    
    members = Members()
    members.groups_id = 6
    members.user_id = 26
    members.save()
    
    print("Состав группы добавлены")

    ##### Расписание #####
    Schedule = apps.get_model("academy", "Schedule")
    
    schedule = Schedule()
    schedule.dates = '2024-03-04 15:00:00'
    schedule.groups_id = 1
    schedule.save()
   
    schedule = Schedule()
    schedule.dates = '2024-03-04 15:00:00'
    schedule.groups_id = 2
    schedule.save()
    
    schedule = Schedule()
    schedule.dates = '2024-03-04 17:00:00'
    schedule.groups_id = 3
    schedule.save()
   
    schedule = Schedule()
    schedule.dates = '2024-03-04 17:00:00'
    schedule.groups_id = 4
    schedule.save()
    
    schedule = Schedule()
    schedule.dates = '2024-03-04 19:00:00'
    schedule.groups_id = 5
    schedule.save()
   
    schedule = Schedule()
    schedule.dates = '2024-03-04 19:00:00'
    schedule.groups_id = 6
    schedule.save()
    
    schedule = Schedule()
    schedule.dates = '2024-03-10 15:00:00'
    schedule.groups_id = 1
    schedule.save()
   
    schedule = Schedule()
    schedule.dates = '2024-03-10 15:00:00'
    schedule.groups_id = 2
    schedule.save()
    
    schedule = Schedule()
    schedule.dates = '2024-03-10 17:00:00'
    schedule.groups_id = 3
    schedule.save()
   
    schedule = Schedule()
    schedule.dates = '2024-03-10 17:00:00'
    schedule.groups_id = 4
    schedule.save()
    
    schedule = Schedule()
    schedule.dates = '2024-03-10 19:00:00'
    schedule.groups_id = 5
    schedule.save()
   
    schedule = Schedule()
    schedule.dates = '2024-03-10 19:00:00'
    schedule.groups_id = 6
    schedule.save()

    print("Расписание добавлены")
    
    ##### Оплата #####
    Payment = apps.get_model("academy", "Payment")
    
    payment = Payment()
    payment.datep = '2024-03-04 09:00:00'
    payment.amount = 6000
    payment.user_id = 3
    payment.save()
    
    payment = Payment()
    payment.datep = '2024-03-04 10:00:00'
    payment.amount = 6000
    payment.user_id = 4
    payment.save()
    
    payment = Payment()
    payment.datep = '2024-03-04 11:00:00'
    payment.amount = 6000
    payment.user_id = 5
    payment.save()
    
    payment = Payment()
    payment.datep = '2024-03-04 12:00:00'
    payment.amount = 6000
    payment.user_id = 6
    payment.save()
            
    payment = Payment()
    payment.datep = '2024-03-04 13:00:00'
    payment.amount = 6000
    payment.user_id = 7
    payment.save()
    
    payment = Payment()
    payment.datep = '2024-03-04 14:00:00'
    payment.amount = 6000
    payment.user_id = 8
    payment.save()
    
    payment = Payment()
    payment.datep = '2024-03-04 15:00:00'
    payment.amount = 6000
    payment.user_id = 9
    payment.save()
    
    payment = Payment()
    payment.datep = '2024-03-04 16:00:00'
    payment.amount = 6000
    payment.user_id = 10
    payment.save()

    payment = Payment()
    payment.datep = '2024-03-05 09:00:00'
    payment.amount = 6000
    payment.user_id = 11
    payment.save()
    
    payment = Payment()
    payment.datep = '2024-03-05 10:00:00'
    payment.amount = 6000
    payment.user_id = 12
    payment.save()
    
    payment = Payment()
    payment.datep = '2024-03-05 11:00:00'
    payment.amount = 6000
    payment.user_id = 13
    payment.save()
    
    payment = Payment()
    payment.datep = '2024-03-05 12:00:00'
    payment.amount = 6000
    payment.user_id = 14
    payment.save()
            
    payment = Payment()
    payment.datep = '2024-03-05 13:00:00'
    payment.amount = 6000
    payment.user_id = 15
    payment.save()
    
    payment = Payment()
    payment.datep = '2024-03-05 14:00:00'
    payment.amount = 6000
    payment.user_id = 16
    payment.save()
    
    payment = Payment()
    payment.datep = '2024-03-05 15:00:00'
    payment.amount = 6000
    payment.user_id = 17
    payment.save()
    
    payment = Payment()
    payment.datep = '2024-03-05 16:00:00'
    payment.amount = 6000
    payment.user_id = 18
    payment.save()

    print("Оплата добавлены")
    
    ##### Отзывы #####
    Reviews = apps.get_model("academy", "Reviews")
    
    reviews = Reviews()
    reviews.dater = '2024-03-04 15:00:00'
    reviews.rating = 5
    #reviews.details = 'За семь месяцев подготовки у дочери восполнены пробелы в учебе за время карантина и с хорошими результатами она поступила в НИШ ФМН Алматы! Очень благодарны преподавателям и центру за качественное обучение, хорошее отношение и теплую атмосферу во время занятий!'
    reviews.details = 'Жеті айлық дайындық кезінде қызының карантин кезінде оқудағы олқылықтары толтырылды және жақсы нәтижелермен ол Алматы ФМБ НЗМ-не түсті! Оқытушылар мен орталыққа сапалы оқу, жақсы қарым-қатынас және сабақ барысында жылы атмосфера үшін өте ризамыз!'
    reviews.user_id = 3
    reviews.save()
    reviews.dater = '2024-03-04 15:00:00'
    reviews.save()
    
    reviews = Reviews()
    reviews.dater = '2024-03-05 16:00:00'
    reviews.rating = 5
    #reviews.details = 'Год готовились и дочка поступила на грант! Всем рекомендую готовить детей здесь!'
    reviews.details = 'Бір жыл дайындалып, қызы грантқа түсті! Мен барлығына балаларды осында дайындауға кеңес беремін!'
    reviews.user_id = 5
    reviews.save()
    reviews.dater = '2024-03-05 16:00:00'
    reviews.save()
    
    reviews = Reviews()
    reviews.dater = '2024-03-10 17:00:00'
    reviews.rating = 5
    #reviews.details = 'Месяц как ходим в центр, на данный момент нравится, насчёт результатов пока сказать ничего не могу, дочке очень нравится'
    reviews.details = 'Орталыққа барған ай, қазіргі уақытта маған ұнайды, Мен әлі ештеңе айта алмаймын, қызыма өте ұнайды'
    reviews.user_id = 7
    reviews.save()
    reviews.dater = '2024-03-10 17:00:00'
    reviews.save()
    
    reviews = Reviews()
    reviews.dater = '2024-03-11 18:00:00'
    reviews.rating = 5
    #reviews.details = 'Добрый день, начали недавно ходить в центр, пока всё нравится. Спасибо преподавателям'
    reviews.details = 'Қайырлы күн, олар жақында орталыққа бара бастады, әзірге бәрі ұнайды. Оқытушыларға рахмет'
    reviews.user_id = 9
    reviews.save()
    reviews.dater = '2024-03-11 18:00:00'
    reviews.save()
    
    reviews = Reviews()
    reviews.dater = '2024-03-12 19:00:00'
    reviews.rating = 5
    #reviews.details = 'Преподаватели грамотно все объясняют, всегда рекомендую своим знакомым'
    reviews.details = 'Мұғалімдер бәрін сауатты түсіндіреді, Мен әрқашан достарыма кеңес беремін'
    reviews.user_id = 11
    reviews.save()
    reviews.dater = '2024-03-12 19:00:00'
    reviews.save()
    
    reviews = Reviews()
    reviews.dater = '2024-03-13 15:00:00'
    reviews.rating = 5
    #reviews.details = 'Хочу поблагодарить замечательный преподавательский состав.Мой сын поступил в НИШ и в этом есть большая заслуга центра .Спасибо Вам большое!'
    reviews.details = 'Керемет оқытушылар құрамына алғыс айтқым келеді.Менің ұлым тауашаға түсті және бұл орталықтың үлкен еңбегі .Сізге көп рахмет!'
    reviews.user_id = 13
    reviews.save()
    reviews.dater = '2024-03-13 15:00:00'
    reviews.save()
    
    reviews = Reviews()
    reviews.dater = '2024-03-14 16:00:00'
    reviews.rating = 5
    #reviews.details = 'Здравствуйте, моя дочь здесь учится 4 месяцев. Центр подготовки  помогает детям подтянуть свои знания, хорошие молодые учителя, которые могут легко найти общий язык с подростками. Она с удовольствием ходит сюда, мы благодарны вам!'
    reviews.details = 'Сәлеметсіз бе, менің қызым мұнда 4 ай оқиды. Дайындық орталығы балаларға өз білімдерін жетілдіруге көмектеседі, жасөспірімдермен оңай тіл таба алатын жақсы жас мұғалімдер. Ол мұнда қуана барады, біз сізге алғыс айтамыз!'
    reviews.user_id = 15
    reviews.save()
    reviews.dater = '2024-03-14 16:00:00'
    reviews.save()
    
    reviews = Reviews()
    reviews.dater = '2024-03-15 17:00:00'
    reviews.rating = 5
    #reviews.details = 'Мой ребёнок ходит уже как 3-ий месяц ,оценки значительно улучшились. Хорошое место и преподаватели'
    reviews.details = 'Мой ребёнок ходит уже как 3-ий месяц ,оценки значительно улучшились. Хорошое место и преподаватели'
    reviews.user_id = 17
    reviews.save()
    reviews.dater = '2024-03-15 17:00:00'
    reviews.save()
    
    reviews = Reviews()
    reviews.dater = '2024-03-16 18:00:00'
    reviews.rating = 5
    #reviews.details = 'Очень классный центр, моя дочь ходила туда для подготовки в НИШ, пока результатов поступления ещё нет, но она допущена. Ходили целый год, качество хорошее, менторы постоянно звонили, писали с обратной связью.'
    reviews.details = 'Өте керемет орталық, менің қызым оқуға түсу нәтижелері әлі жоқ, бірақ ол қабылданады. Олар жыл бойы жүрді, сапасы жақсы, тәлімгерлер үнемі қоңырау шалып, кері байланыспен жазды.'
    reviews.user_id = 19
    reviews.save()
    reviews.dater = '2024-03-16 18:00:00'
    reviews.save()
    
    reviews = Reviews()
    reviews.dater = '2024-03-17 19:00:00'
    reviews.rating = 5
    #reviews.details = 'У меня сын закончил 9 класс, и я хочу сказать благодаря учебному центру он получил отличные итоговые оценки за год.'
    reviews.details = 'Менің ұлым 9-сыныпты бітірді, мен айтқым келеді, Оқу орталығының арқасында ол бір жыл ішінде керемет қорытынды баға алды.'
    reviews.user_id = 21
    reviews.dater = '2024-03-17 19:00:00'
    reviews.save()

    print("Отзывы добавлены")
    
    ##### Заявки #####
    Claim = apps.get_model("academy", "Claim")

    claim = Claim()
    claim.dater = datetime.now()
    claim.user_id = 25    
    claim.training_id = 2
    #claim.details = 'Прошу записать меня на подготовительные курсы по информатике.'
    claim.details = 'Мені информатика бойынша дайындық курстарына жазуды сұраймын.'
    claim.save()

    print("Заявки добавлены")
    
    
class Migration(migrations.Migration):

    dependencies = [
        ('academy', '0001_initial'),
    ]
    
    operations = [
        migrations.RunPython(beginning),       
    ]
